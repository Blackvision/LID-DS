import os
import sys
import argparse

from pyvirtualdisplay import Display
from selenium.webdriver.chrome.options import Options

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='HTTPS-Client Simulation.')
    parser.add_argument('-ip',
                        dest='server_ip',
                        action='store',
                        type=str, required=True,
                        help='The IP address of the target server')
    parser.add_argument('-a',
                        dest='attack',
                        action='store',
                        type=str, required=True,
                        help='Type of attack to be started')
    parser.add_argument('-v',
                        dest='verbose',
                        action='store',
                        type=bool,
                        required=False,
                        default=False,
                        help='Make the operations more talkative')
    args = parser.parse_args()
    if args.verbose:
        print(f"Run attack {args.attack}")
    # Virtual display to run chrome-browser
    display = Display(visible=0, size=(1920, 1080))
    display.start()

    # Headless chrome-browser settings
    chrome_options = Options()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument('--ignore-certificate-errors')
    chrome_options.add_argument('--disable-dev-shm-usage')


    while True:
        sys.stdin.readline()
        url = f"http://{args.server_ip}:3000/"
        if args.attack == "SQLInjection":
            if args.verbose:
                print("Start SQLInjection")
            os.system(f'./sql_injection.sh {url}')
